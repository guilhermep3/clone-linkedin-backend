import type { Prisma } from "@prisma/client";
export declare const findCompanyById: (id: number) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
} | null>;
export declare const findCompanyByUsername: (username: string) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
} | null>;
export declare const findCompanyByEmail: (email: string) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
} | null>;
export declare const createCompany: (data: Prisma.companiesCreateInput) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
}>;
export declare const findCompanies: (perPage: number, currentPage: number) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
}[]>;
export declare const getCompanyFollowingCount: (id: number) => Promise<number>;
export declare const getCompanyFollowersCount: (id: number) => Promise<number>;
export declare const getCompanyPostsCount: (id: number) => Promise<number>;
export declare const getEmployeesCount: (id: number) => Promise<number>;
export declare const findEmployees: (company_id: number) => Promise<{
    id: number;
    user_id: number;
    company_id: number;
    role: string;
    employment_type: import("@prisma/client").$Enums.company_employees_employment_type;
    hired_at: Date;
}[]>;
export declare const addEmployed: (company_id: number, user_id: number, role: string) => Promise<{
    id: number;
    user_id: number;
    company_id: number;
    role: string;
    employment_type: import("@prisma/client").$Enums.company_employees_employment_type;
    hired_at: Date;
}>;
export declare const updateCompanyById: (id: number, data: Prisma.companiesUpdateInput) => Promise<{
    type: import("@prisma/client").$Enums.company_type;
    name: string;
    id: number;
    username: string;
    email: string;
    password: string;
    phone: string | null;
    country: string | null;
    state: string | null;
    city: string | null;
    bio: string | null;
    about: string | null;
    website: string | null;
    avatar: string;
    cover: string;
    verified: boolean;
    created_at: Date;
    industry: string;
    presentation_video_url: string | null;
    size: import("@prisma/client").$Enums.companies_size | null;
}>;
export declare const deleteCompanyById: (id: number) => Promise<void>;
//# sourceMappingURL=company.d.ts.map